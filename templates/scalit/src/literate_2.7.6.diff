Index: src/compiler/scala/tools/nsc/Global.scala
===================================================================
--- src/compiler/scala/tools/nsc/Global.scala	(revision 18720)
+++ src/compiler/scala/tools/nsc/Global.scala	(working copy)
@@ -208,7 +208,10 @@
   }
 
   def getSourceFile(f: AbstractFile): SourceFile =
-    new BatchSourceFile(f, reader.read(f))
+    if (f.name.endsWith(".nw")) {
+      // is a literate file
+      scalit.tangle.LiterateCompilerSupport.getLiterateSourceFile(f.name)
+    } else new BatchSourceFile(f, reader.read(f))
 
   def getSourceFile(name: String): SourceFile = {
     val f = AbstractFile.getFile(name)
Index: src/compiler/scala/tools/nsc/Properties.scala
===================================================================
--- src/compiler/scala/tools/nsc/Properties.scala	(revision 18720)
+++ src/compiler/scala/tools/nsc/Properties.scala	(working copy)
@@ -45,7 +45,7 @@
   }
 
   val fileEndingString: String = {
-    val defaultString = ".scala|.java"
+    val defaultString = ".scala|.java|.nw"
     props.getProperty("file.ending", defaultString)  
   }
 
Index: build.xml
===================================================================
--- build.xml	(revision 18720)
+++ build.xml	(working copy)
@@ -215,6 +215,14 @@
       target="1.5" source="1.5">
         <compilerarg line="${javac.args}"/>
     </javac>
+    <javac
+       srcdir="${src.dir}/compiler/toolsupport"
+       destdir="${build-locker.dir}/classes/library"
+       classpath="${build-locker.dir}/classes/library"
+       includes="**/*.java"
+       target="1.5" source="1.5">
+      <compilerarg line="${javac.args}"/>
+    </javac>
     <scalacfork
       destdir="${build-locker.dir}/classes/library"
       compilerpathref="starr.classpath"
@@ -353,6 +361,14 @@
       target="1.5" source="1.5">
       <compilerarg line="${javac.args}"/>
     </javac>
+    <javac
+       srcdir="${src.dir}/compiler/toolsupport"
+       destdir="${build-quick.dir}/classes/library"
+       classpath="${build-quick.dir}/classes/library"
+       includes="**/*.java"
+       target="1.5" source="1.5">
+      <compilerarg line="${javac.args}"/>
+    </javac>
     <scalacfork
       destdir="${build-quick.dir}/classes/library"
       compilerpathref="locker.classpath"
@@ -734,6 +750,14 @@
       target="1.5" source="1.5">
       <compilerarg line="${javac.args}"/>
     </javac>
+    <javac
+       srcdir="${src.dir}/compiler/toolsupport"
+       destdir="${build-strap.dir}/classes/library"
+       classpath="${build-strap.dir}/classes/library"
+       includes="**/*.java"
+       target="1.5" source="1.5">
+      <compilerarg line="${javac.args}"/>
+    </javac>
     <scalac
       srcdir="${src.dir}/library"
       destdir="${build-strap.dir}/classes/library"
@@ -917,6 +941,14 @@
       target="1.5" source="1.5">
       <compilerarg line="${javac.args}"/>
     </javac>
+    <javac
+       srcdir="${src.dir}/compiler/toolsupport"
+       destdir="${build-optimised.dir}/classes/library"
+       classpath="${build-optimised.dir}/classes/library"
+       includes="**/*.java"
+       target="1.5" source="1.5">
+      <compilerarg line="${javac.args}"/>
+    </javac>
     <scalacfork
       destdir="${build-optimised.dir}/classes/library"
       compilerpathref="quick.classpath"
